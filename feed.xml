<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://alexsuncn.github.io/</id><title>AlexSun的博客</title><subtitle>AlexSun的个人技术杂谈，关注生物信息方向。</subtitle> <updated>2025-05-06T11:27:20+08:00</updated> <author> <name>AlexSun</name> <uri>https://alexsuncn.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://alexsuncn.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="https://alexsuncn.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2025 AlexSun </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Git暂存区的正确理解及其相关操作总结</title><link href="https://alexsuncn.github.io/posts/Git-index/" rel="alternate" type="text/html" title="Git暂存区的正确理解及其相关操作总结" /><published>2022-01-07T00:00:00+08:00</published> <updated>2025-05-06T10:57:53+08:00</updated> <id>https://alexsuncn.github.io/posts/Git-index/</id> <content src="https://alexsuncn.github.io/posts/Git-index/" /> <author> <name>AlexSun</name> </author> <category term="技术" /> <summary> 0 前言 使用Git管理代码时，经常会需要重置暂存区（工作区）里的文件，本文将对Git暂存区/工作区的操作做一个总结。 1 Git暂存区的错误认识 我们都知道Git“三棵树”（工作区、暂存区、版本库）的概念，那么在开始之前，先提一个问题： 仓库处于刚 commit 完的状态时，暂存区有没有文件？ 三秒钟时间回答 3… 2… 1… 一定会有人回答：暂存区是空的，没有文件 敲黑板！注意，这是错误的！ 正确答案应该是：暂存区有文件，且内容与版本库一致 这是一个非常普遍且深入人心的谬误，许多大V的Git教程也在讲述这个错误的认识。记住，非空仓库暂存区里始终有文件。如果有不清楚的地方，参阅Git官方指导书——《精通Git》7.7 Git 工具 - 重置揭密。 正确理解Git暂存区，才能更好地理解后面的相关命令。 （可以通过git ls-files查看当前缓存区中的文... </summary> </entry> <entry><title>CSS3实现元素水平垂直居中</title><link href="https://alexsuncn.github.io/posts/CSS3-middle/" rel="alternate" type="text/html" title="CSS3实现元素水平垂直居中" /><published>2021-12-30T00:00:00+08:00</published> <updated>2021-12-30T14:50:40+08:00</updated> <id>https://alexsuncn.github.io/posts/CSS3-middle/</id> <content src="https://alexsuncn.github.io/posts/CSS3-middle/" /> <author> <name>AlexSun</name> </author> <category term="Web" /> <category term="前端" /> <summary> 需求 “很简单”的需求：页面正中显示一张图片（水平垂直居中），宽度自适应缩放（不同设备均完整显示）。 方案 由于前端基础薄弱，只能依赖搜索。但能搜索到的多数都是基于CSS2盒子模型的传统Float布局方案（依赖 position float 属性），均没能成功实现需求。 询问一位前端朋友得知基于CSS3弹性盒子（Flex Box）模型的Flex布局很容易就能实现。 2009年，W3C 提出了一种新的方案 - Flex 布局，可以简便、完整、响应式地实现各种页面布局。目前，它已经得到了所有浏览器的支持，这意味着，现在就能很安全地使用这项功能。 代码 添加一个&amp;lt;div&amp;gt;作为父元素，&amp;lt;img&amp;gt;也可以是其他需要实现居中的元素： &amp;lt;body&amp;gt; &amp;lt;div class="outer"&amp;gt; &amp;lt;img ... </summary> </entry> <entry><title>本站第一篇文章</title><link href="https://alexsuncn.github.io/posts/Start-up/" rel="alternate" type="text/html" title="本站第一篇文章" /><published>2021-12-29T00:00:00+08:00</published> <updated>2022-01-06T17:57:23+08:00</updated> <id>https://alexsuncn.github.io/posts/Start-up/</id> <content src="https://alexsuncn.github.io/posts/Start-up/" /> <author> <name>AlexSun</name> </author> <category term="生活" /> <summary> 新的起点 在2021年的末尾，我奔三的年纪，终于搭起了想做很多年的个人博客。有言道： 觉得为时已晚的时候，恰恰是最早的时候。 秉着这种“不怕晚”的精神，总算完成了本站的搭建。 没有什么雄心壮志想要把它做大，或达到多少访问量，仅仅希望本站作为自己工作中的技术记录，日后能对自己的职业生涯有个交代，足矣。 希望自己能坚持下去。 </summary> </entry> </feed>
